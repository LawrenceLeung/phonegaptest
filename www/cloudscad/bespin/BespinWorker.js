bespin.tiki.register("::syntax_worker",{name:"syntax_worker",dependencies:{syntax_directory:"0.0.0",underscore:"0.0.0"}});
bespin.tiki.module("syntax_worker:index",function(a,d){var g=a("bespin:promise"),b=a("underscore")._;a("bespin:console");var c=a("syntax_directory").syntaxDirectory;d.syntaxWorker={engines:{},annotate:function(h,m){function n(i){return i.split(":")}function o(){p.push(b(e).invoke("join",":").join(" "))}var l=this.engines,p=[],j=[],q=[],e=b(h.split(" ")).map(n);b(m).each(function(i){o();for(var r=[],t={},k=0;k<i.length;){for(var s;;){s=b(e).last();if(s.length<3)break;var f=s[2];if(i.substring(k,k+
f.length)!==f)break;e.pop()}f=l[s[0]].get(s,i,k);if(f==null)k={state:"plain",tag:"plain",start:k,end:i.length};else{e[e.length-1]=f.state;f.hasOwnProperty("newContext")&&e.push(f.newContext);k=f.token;f=f.symbol;if(f!=null)t["-"+f[0]]=f[1]}r.push(k);k=k.end}j.push(r);q.push(t)});o();return{states:p,attrs:j,symbols:q}},loadSyntax:function(h){var m=new g.Promise,n=this.engines;if(n.hasOwnProperty(h)){m.resolve();return m}var o=c.get(h);if(o==null)throw new Error('No syntax engine installed for syntax "'+
h+'".');o.extension.load().then(function(l){n[h]=l;l=l.subsyntaxes;l==null?m.resolve():g.group(b(l).map(this.loadSyntax,this)).then(b(m.resolve).bind(m))}.bind(this));return m}}});bespin.tiki.register("::js_syntax",{name:"js_syntax",dependencies:{standard_syntax:"0.0.0"}});
bespin.tiki.module("js_syntax:index",function(a,d){a=a("standard_syntax").StandardSyntax;d.JSSyntax=new a({start:[{regex:/^var(?=\s*([A-Za-z_$][A-Za-z0-9_$]*)\s*=\s*require\s*\(\s*['"]([^'"]*)['"]\s*\)\s*[;,])/,tag:"keyword",symbol:"$1:$2"},{regex:/^(?:break|case|catch|continue|default|delete|do|else|false|finally|for|function|if|in|instanceof|let|new|null|return|switch|this|throw|true|try|typeof|var|void|while|with)(?![a-zA-Z0-9_])/,tag:"keyword"},{regex:/^[A-Za-z_][A-Za-z0-9_]*/,tag:"plain"},{regex:/^[^'"\/ \tA-Za-z0-9_]+/,
tag:"plain"},{regex:/^[ \t]+/,tag:"plain"},{regex:/^'(?=.)/,tag:"string",then:"qstring"},{regex:/^"(?=.)/,tag:"string",then:"qqstring"},{regex:/^\/\/.*/,tag:"comment"},{regex:/^\/\*/,tag:"comment",then:"comment"},{regex:/^./,tag:"plain"}],qstring:[{regex:/^(?:\\.|[^'\\])*'?/,tag:"string",then:"start"}],qqstring:[{regex:/^(?:\\.|[^"\\])*"?/,tag:"string",then:"start"}],comment:[{regex:/^[^*\/]+/,tag:"comment"},{regex:/^\*\//,tag:"comment",then:"start"},{regex:/^[*\/]/,tag:"comment"}]})});
bespin.tiki.register("::standard_syntax",{name:"standard_syntax",dependencies:{syntax_worker:"0.0.0",syntax_directory:"0.0.0",underscore:"0.0.0"}});
bespin.tiki.module("standard_syntax:index",function(a,d){a("bespin:promise");var g=a("underscore")._;a("bespin:console");a("syntax_directory");d.StandardSyntax=function(b,c){this.states=b;this.subsyntaxes=c};d.StandardSyntax.prototype={get:function(b,c,h){var m=b[0],n=b[1];if(!this.states.hasOwnProperty(n))throw new Error('StandardSyntax: no such state "'+n+'"');var o=c.substring(h),l={start:h,state:b},p=null;g(this.states[n]).each(function(j){var q=j.regex.exec(o);if(q!=null){var e=q[0].length;l.end=
h+e;l.tag=j.tag;var i=null;if(j.hasOwnProperty("symbol")){i=/^([^:]+):(.*)/.exec(j.symbol.replace(/\$([0-9]+)/g,function(t,k){return q[k]}));i=[i[1],i[2]]}var r=null;if(j.hasOwnProperty("then")){e=j.then.split(" ");j=[m,e[0]];if(e.length>1)r=e[1].split(":")}else if(e===0)throw new Error("StandardSyntax: Infinite loop detected: zero-length match that didn't change state");else j=b;p={state:j,token:l,symbol:i};if(r!=null)p.newContext=r;g.breakLoop()}});return p}}});
bespin.metadata={js_syntax:{resourceURL:"resources/js_syntax/",name:"js_syntax",environments:{worker:true},dependencies:{standard_syntax:"0.0.0"},testmodules:[],provides:[{pointer:"#JSSyntax",ep:"syntax",fileexts:["js","json"],name:"js"}],type:"plugins/supported",description:"JavaScript syntax highlighter"},syntax_worker:{resourceURL:"resources/syntax_worker/",description:"Coordinates multiple syntax engines",environments:{worker:true},dependencies:{syntax_directory:"0.0.0",underscore:"0.0.0"},testmodules:[],
type:"plugins/supported",name:"syntax_worker"},standard_syntax:{resourceURL:"resources/standard_syntax/",description:"Easy-to-use basis for syntax engines",environments:{worker:true},dependencies:{syntax_worker:"0.0.0",syntax_directory:"0.0.0",underscore:"0.0.0"},testmodules:[],type:"plugins/supported",name:"standard_syntax"}};if(typeof window!=="undefined")throw new Error('"worker.js can only be loaded in a web worker. Use the "worker_manager" plugin to instantiate web workers.');
var messageQueue=[],target=null;if(typeof bespin==="undefined")bespin={};
function pump(){if(messageQueue.length!==0){var a=messageQueue[0];switch(a.op){case "load":var d=a.base;bespin.base=d;bespin.hasOwnProperty("tiki")||importScripts(d+"tiki.js");if(!bespin.bootLoaded){importScripts(d+"plugin/register/boot");bespin.bootLoaded=true}var g=bespin.tiki.require;g.loader.sources[0].xhr=true;g.ensurePackage("::bespin",function(){var c=g("bespin:plugins").catalog,h=g("bespin:promise").Promise;if(bespin.hasOwnProperty("metadata")){c.registerMetadata(bespin.metadata);c=new h;
c.resolve()}else c=c.loadMetadataFromURL("plugin/register/worker");c.then(function(){g.ensurePackage(a.pkg,function(){target=g(a.module)[a.target];messageQueue.shift();pump()})})});break;case "invoke":d=function(c){postMessage(JSON.stringify({op:"finish",id:a.id,result:c}));messageQueue.shift();pump()};if(!target.hasOwnProperty(a.method))throw new Error("No such method: "+a.method);var b=target[a.method].apply(target,a.args);typeof b==="object"&&b.isPromise?b.then(d,function(c){throw c;}):d(b);break}}}
onmessage=function(a){messageQueue.push(JSON.parse(a.data));messageQueue.length===1&&pump()};
